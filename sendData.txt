#include <esp_now.h>
#include <WiFi.h>
#include <ArduinoJson.h>

uint8_t broadcastAddress[] = {0xC8, 0xF0, 0x9E, 0xF5, 0x30, 0x94};

String jsondata;
StaticJsonDocument<200> doc;

// Function for handling data send
void OnDataSent(const uint8_t *mac_addr, esp_now_send_status_t status) {
  Serial.print("\r\nLast Packet Send Status:\t");
  Serial.println(status == ESP_NOW_SEND_SUCCESS ? "Delivery Success" : "Delivery Fail");
}

// Function for handling data receive
void OnDataRecv(const uint8_t *mac_addr, const uint8_t *data, int len) {
  Serial.print("Received data: ");
  for (int i = 0; i < len; i++) {
    Serial.print((char)data[i]);
  }
  Serial.println();

  // Check for the presence of newline character
  if (data[len - 1] == '\n') {
    // Process the complete message
    deserializeJson(doc, data);
    // Your further processing code here
  }
}

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);

  // Initialize ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }

  // Register send callback
  esp_now_register_send_cb(OnDataSent);

  // Register receive callback
  esp_now_register_recv_cb(OnDataRecv);

  // Register peer
  esp_now_peer_info_t peerInfo;
  memset(&peerInfo, 0, sizeof(peerInfo));
  for (int ii = 0; ii < 6; ++ii) {
    peerInfo.peer_addr[ii] = (uint8_t)broadcastAddress[ii];
  }
  peerInfo.channel = 0;
  peerInfo.encrypt = false;

  // Add peer
  if (esp_now_add_peer(&peerInfo) != ESP_OK) {
    Serial.println("Failed to add peer");
    return;
  }
}

void loop() {
  jsondata = "";
  
  doc["a"] = 1;
  doc["b"] = "ON Data Receiving Amir, Congratulations";
  serializeJson(doc, jsondata);
  esp_now_send(broadcastAddress, (uint8_t *)(jsondata + '\n').c_str(), jsondata.length() + 1);
  Serial.println(jsondata);
  delay(1000);

  jsondata = "";
  
  doc["a"] = 0;
  doc["b"] = "OFF Data Receiving Amir, Congratulations";
  serializeJson(doc, jsondata);
  esp_now_send(broadcastAddress, (uint8_t *)(jsondata + '\n').c_str(), jsondata.length() + 1);
  Serial.println(jsondata);
  delay(1000);
}
